label_size = 16)
arrangement <- list(p3, NULL, p1, p2)
plot_grid(arrangement,
# rel_widths = c(2, 1, 1),
nrow = 2,
n_col = 2,
labels = "AUTO",
label_fontfamily= "serif",
label_size = 16)
plot_grid(plotlist=arrangement,
# rel_widths = c(2, 1, 1),
nrow = 2,
n_col = 2,
labels = "AUTO",
label_fontfamily= "serif",
label_size = 16)
ggdraw() +
draw_plot(p3, 0, .5, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
ggdraw() +
draw_plot(p3, 0, .5, 2, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
ggdraw() +
draw_plot(p3, 0, .5, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
ggdraw() +
draw_plot(p3, 0, 0, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
ggdraw() +
draw_plot(p3, 0, .5, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
p3 <- ggdraw() +
draw_image("/Users/lukas/downloads/Blank diagram(1).png",
scale=1.5)
ggdraw() +
draw_plot(p3, 0, .5, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
p3 <- ggdraw() +
draw_image("/Users/lukas/downloads/Blank diagram(1).png",
scale=1.2)
ggdraw() +
draw_plot(p3, 0, .5, 1, .5) +
draw_plot(p1, 0, 0, .5, .5) +
draw_plot(p2, .5, 0, .5, .5)
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette)+
ggtitle("Type B error")+
ggthemes::theme_tufte()+
ylab("")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(
margin = margin(t = 0, r = 20, b = 0, l = 0),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette)+
ggtitle("Type B error")+
ggthemes::theme_tufte()+
ylab("")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
angle = 360))
p2 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette)+
ggtitle("Type B error")+
ggthemes::theme_tufte()+
ylab("")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,margin = margin(t = 0, r = 20, b = 0, l = 0),
angle = 360))
p2
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(margin = margin(t = 0, r = 20, b = 0, l = 0),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
hjust=1,
margin = margin(r=10),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
hjust=0,
margin = margin(r=10),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
x <- seq(-1, 1, 0.1)
y_1 <- sigmoid_fun(x, 1, 5)
y_2 <- sigmoid_fun(x, 1, 10)
df <- data_frame("x" = rep(x, 2),
"pos" = rep(c(1,2), each=length(x)/2),
"y" = c(y_1, y_2))
color_palette <- c("#2E5868","#B06988")
p1 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
p1
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_smooth(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
p1 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
p1
x <- seq(-1, 1, 0.001)
y_1 <- sigmoid_fun(x, 1, 5)
y_2 <- sigmoid_fun(x, 1, 10)
df <- data_frame("x" = rep(x, 2),
"pos" = rep(c(1,2), each=length(x)/2),
"y" = c(y_1, y_2))
color_palette <- c("#2E5868","#B06988")
p1 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
margin = margin(r=10),
angle = 360))
x <- seq(-1, 1, 0.0001)
p1
arrangement <- list(p1, p2)
plot_grid(plotlist=arrangement,
# rel_widths = c(2, 1, 1),
nrow = 2,
n_col = 2,
label_size = 16)
plot_grid(plotlist=arrangement,
# rel_widths = c(2, 1, 1),
nrow = 1,
n_col = 2,
label_size = 16)
plot_grid(p1, p2,
nrow = 1,
n_col = 2,
label_size = 16)
plot_grid(p1, p2,
label_size = 16)
plot_grid(p1, p2)
png('/users/lukas/desktop/schematic.png', units="in", width=9, height=5, res=1000)
plot_grid(p1, p2)
dev.off()
png('/users/lukas/desktop/schematic.png', units="in", width=7, height=3, res=1000)
plot_grid(p1, p2)
dev.off()
png('/users/lukas/desktop/schematic.png', units="in", width=8, height=4, res=1000)
plot_grid(p1, p2)
dev.off()
png('/users/lukas/desktop/schematic.png', units="in", width=8, height=3, res=1000)
plot_grid(p1, p2)
dev.off()
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\n\"comparison > standard\"\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
hjust = 0,
margin = margin(r=10),
angle = 360))
df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\ncomparison > standard\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
hjust = 0,
margin = margin(r=10),
angle = 360))
p1 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette, guide="none")+
ggtitle("Type A error")+
ggthemes::theme_tufte()+
ylab("Probability of a\ncomparison > standard\nresponse")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,
hjust = 0,
margin = margin(r=10),
angle = 360))
x <- seq(-1, 1, 0.0001)
y_1 <- sigmoid_fun(x, 1, 5)
y_2 <- sigmoid_fun(x, 2, 5)
df <- data_frame("x" = rep(x, 2),
"pos" = rep(c(1,2), each=length(x)/2),
"y" = c(y_1, y_2))
p2 <- df %>%
ggplot(aes(x=x,
y=y,
color=as.factor(pos))) +
geom_line(size=1) +
scale_color_manual(values = color_palette)+
ggtitle("Type B error")+
ggthemes::theme_tufte()+
ylab("")+
xlab("\nStimulus intensity")+
labs(color = "Position of\ncomparison")+
theme(axis.line = element_line(size = .5, color = "#969696"),
axis.ticks = element_line(color = "#969696"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 12),
text = element_text(size = 12),
plot.title = element_text(size =16,
hjust = 0.5),
axis.title.y = element_text(vjust = 0.5,margin = margin(t = 0, r = 20, b = 0, l = 0),
angle = 360))
png('/users/lukas/desktop/schematic.png', units="in", width=8, height=3, res=1000)
plot_grid(p1, p2)
dev.off()
plot_grid(p1, p2,
rel_widths = c(1.1, 1))
png('/users/lukas/desktop/schematic.png', units="in", width=8, height=3, res=1000)
plot_grid(p1, p2,
rel_widths = c(1.1, 1))
dev.off()
plot_grid(p1, p2,
rel_widths = c(1.08, 1))
plot_grid(p1, p2,
rel_widths = c(1, 1))
library(tidyverse)
library(rstan)
library(bayesplot)
# set working directory to script location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# read data
df <- read_csv("../../data/data_lexical_decision.csv")
# filter for one person
df_subset <- df %>%
filter(id == 2)
df_subset <- df_subset %>%
filter(row(df_subset) <= 800)
# create Stan data list
stan_data = list(
N       = nrow(df_subset),
correct = df_subset$acc,
rt      = df_subset$rt,
# min_rt  = min(df_subset$rt),
context = df_subset$stim_type)
# set initial values
init = function(chains=4) {
L = list()
for (c in 1:chains) {
L[[c]]=list()
L[[c]]$v     = runif(4, 0.5, 4.0)
L[[c]]$a     = runif(1, 1.0, 1.5)
L[[c]]$ndt   = runif(1, 0.05, 0.1)
L[[c]]$v_sd  = runif(1, 0.01, 0.05)
L[[c]]$a_sd  = runif(1, 0.01, 0.05)
L[[c]]$v_t   = runif(nrow(df_subset), 1.0, 3.0)
L[[c]]$a_t   = runif(nrow(df_subset), 1.0, 3.0)
}
return (L)
}
fit <- stan("tbt_var.stan",
init=init(4),
data=stan_data,
chains=4,
iter = 4000,
cores=parallel::detectCores())
mcmc_pairs(fit, pars = c("v[1]", "v[2]", "v[3]", "v[4]", "a", "ndt", "v_sd", "a_sd"))
